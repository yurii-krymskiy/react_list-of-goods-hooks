{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","None","sortField","setSortField","isReverseField","setIsReverseField","visibleGoods","goods","preparedGoods","sort","good1","good2","Abc","localeCompare","Length","length","reverse","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,UAAAA,E,gBAAAA,E,SAAAA,M,KAML,IA6BaE,EAAgB,WAC3B,MAAkCC,mBAAmBH,EAASI,MAA9D,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA4CH,oBAAS,GAArD,mBAAOI,EAAP,KAAuBC,EAAvB,KACMC,EAhCiB,SACvBC,EACAL,GAEI,IADJE,EACG,wDACGI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKL,EAASe,IACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKd,EAASiB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAKXX,GACFI,EAAcQ,UAGTR,EAMcS,CACnBnB,EACAI,EACAE,GAGF,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,YAAalB,IAAcL,EAASe,MAEtCS,QAAS,kBAAMlB,EAAaN,EAASe,MALvC,iCAUA,wBACEO,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAalB,IAAcL,EAASiB,SAEtCO,QAAS,kBAAMlB,EAAaN,EAASiB,SALvC,4BAUA,wBACEK,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,aAAchB,IAEhBiB,QAAS,kBAAMhB,GAAmBD,IALpC,sBAUEF,GAAaE,IACb,wBACEe,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPlB,EAAaN,EAASI,MACtBI,GAAkB,IALtB,sBAaJ,6BACE,6BACGC,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,cC7GpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ee8f2241.chunk.js","sourcesContent":["import cn from 'classnames';\nimport React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  Abc = 'ABC',\n  Length = 'LENGTH',\n  None = '',\n}\n\nconst getPreparedGoods = (\n  goods: string[],\n  sortField: SortType,\n  isReverseField = false,\n) => {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortType.Abc:\n          return good1.localeCompare(good2);\n\n        case SortType.Length:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReverseField) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n};\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState<SortType>(SortType.None);\n  const [isReverseField, setIsReverseField] = useState(false);\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer,\n    sortField,\n    isReverseField,\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            ' is-light': sortField !== SortType.Abc,\n          })}\n          onClick={() => setSortField(SortType.Abc)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            ' is-light': sortField !== SortType.Length,\n          })}\n          onClick={() => setSortField(SortType.Length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            ' is-light': !isReverseField,\n          })}\n          onClick={() => setIsReverseField(!isReverseField)}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReverseField) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField(SortType.None);\n              setIsReverseField(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {visibleGoods.map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}